/*
    - 테이블 정의
        - d[i][0]는 10 고정 이후 0으로 시작하는 i자리 이친수 개수
        - d[i][1]는 10 고정 이후 1로 시작하는 i자리 이친수 개수
    - 점화식 찾기
        - d[i][0] = d[i-1][0]+d[i-1][1];
        - d[i][1] = d[i-1][0];
    - 초기값 정의
        d[1][0] = 0; d[1][1] = 1;
        d[2][0] = 1; d[2][1] = 0;
        d[3][0] = 1; d[3][1] = 1;
    첫번째, 두번째 자리는 무조건 1과 0으로 고정
*/

#include <bits/stdc++.h>
using namespace std;
#define ll long long

int d[95][2];

int main(void) {
    ios::sync_with_stdio(0);
    cin.tie(0);
    int n; cin >> n;
    d[1][0] = 0; d[1][1] = 1;
    d[2][0] = 1; d[2][1] = 0;
    d[3][0] = 1; d[3][1] = 1;
    
    for(int i = 4; i <= n; i++) {
        d[i][0] = d[i-1][0]+d[i-1][1];
        d[i][1] = d[i-1][0];
    }
    cout << d[n][0]+d[n][1];
    // 1
    // 10
    // 10 0 10 1

    // 10 00 01 / 10

    // 10 000 010 001
    // 10 100 101

    // 10 0 000 0 001 0 010 0 100 0 101
    // 10 1 000 1 010 1 001
}